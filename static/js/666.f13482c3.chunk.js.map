{"version":3,"file":"static/js/666.f13482c3.chunk.js","mappings":"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","sources":["pages/RegisterPage/style.js","components/baseComponents/PhoneInput/style.js","components/baseComponents/PhoneInput/PhoneInput.jsx","components/AuthForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { ReactComponent as BackgroundMobileIcon } from '../../images/mobileBackground.svg';\nimport { ReactComponent as BackgroundTabletIcon } from '../../images/tabletBackground.svg';\nimport { ReactComponent as BackgroundPCIcon } from '../../images/pcBackground.svg';\n\nimport styled from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  width: 100%;\n  z-index: 1;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (min-width: 768px) {\n    align-items: center;\n  }\n`;\n\n// position: absolute;\n//   top: 50%;\n//   width: 100%;\n//   z-index: 1;\n//   transform: translateY(-50%);\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: center;\n//   align-items: center;\n//   @media (min-width: 768px) {\n//     align-items: center;\n//   }\n\nconst styleForBackgroundImg = `position: fixed;\nbottom: 0px;\nwidth: 100%;\nz-index: -1;`;\nexport const BackgroundMobileIconStyled = styled(BackgroundMobileIcon)`\n  ${styleForBackgroundImg}\n`;\nexport const BackgroundTabletIconStyled = styled(BackgroundTabletIcon)`\n  ${styleForBackgroundImg}\n`;\nexport const BackgroundPCIconStyled = styled(BackgroundPCIcon)`\n  ${styleForBackgroundImg}\n`;\n","import PhoneInput from 'react-phone-input-2';\nimport './material.css';\n\nimport styled from 'styled-components';\n\nexport const PhoneInputStyled = styled(PhoneInput)`\n  width: 100%;\n  #phone:hover,\n  #phone:focus {\n    border-color: ${p => p.theme.colors.hoveredAccent};\n    box-shadow: 0 0 0 1px ${p => p.theme.colors.hoveredAccent};\n  }\n  #phone {\n    background-color: ${p => p.theme.colors.background};     \n    }\n  }\n  .special-label {\n    position: absolute;\n      z-index: 1;\n      top: -7px;\n      left: 25px;\n      display: block;\n      color: ${p => p.theme.colors.text};\n\n      background: transparent;\n      padding: 0 5px;\n      font-size: 14px;\n\n      white-space: nowrap;\n      z-index: 2;\n  }\n  \n`;\n\nexport const DecorativeDiv = styled.label`\n  position: absolute;\n  left: 25px;\n  top: -2px;\n  height: 4px;\n  padding-right: 2px;\n  background-color: ${p => p.theme.colors.background};\n  color: transparent;\n  z-index: 1;\n`;\n\nexport const FieldWrapper = styled.div`\n  position: relative;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PhoneInputStyled, FieldWrapper, DecorativeDiv } from './style';\n\nimport { Error } from 'components/AuthForm/style';\n\nconst PhoneInput = ({\n  phoneNumber,\n  setPhoneNumber,\n  isPhoneValid,\n  setPhoneIsValid,\n}) => {\n  const phoneRegExp = /^\\+\\d{12,15}$/;\n\n  const phoneValidation = value => {\n    return phoneRegExp.test(`+${value}`);\n  };\n\n  const onBlurPhone = () => {\n    phoneValidation(phoneNumber)\n      ? setPhoneIsValid(null)\n      : setPhoneIsValid('incorrect phone number');\n  };\n  return (\n    <FieldWrapper>\n      <PhoneInputStyled\n        inputProps={{\n          id: 'phone',\n        }}\n        onBlur={onBlurPhone}\n        countryCodeEditable={false}\n        name=\"phone\"\n        autoComplete=\"off\"\n        country={'ua'}\n        placeholder=\"Mobile phone\"\n        value={phoneNumber}\n        onChange={value => {\n          setPhoneNumber(value);\n          if (phoneValidation(value)) {\n            setPhoneIsValid(null);\n          }\n        }}\n      />\n      <DecorativeDiv>{'Phone'}</DecorativeDiv>\n      {isPhoneValid && <Error>{isPhoneValid}</Error>}\n    </FieldWrapper>\n  );\n};\n\nPhoneInput.propTypes = {\n  phoneNumber: PropTypes.string.isRequired,\n  setPhoneNumber: PropTypes.func.isRequired,\n  isPhoneValid: PropTypes.string,\n  setPhoneIsValid: PropTypes.func.isRequired,\n};\n\nexport default PhoneInput;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from 'hooks/useAuth';\nimport authOperations from 'redux/auth/authOperations';\nimport { Formik } from 'formik';\n\nimport Button from '../baseComponents/Button/Button';\nimport ButtonSpinner from '../baseComponents/ButtonSpinner/ButtonSpinner';\nimport Input from 'components/baseComponents/Input/Input';\nimport FieldsWrapper from '../baseComponents/FieldsWrapper/FieldsWrapper';\n\n//import { MobPhoneInput } from '../baseComponents/PhoneInput/style';\nimport PhoneInput from 'components/baseComponents/PhoneInput/PhoneInput';\n\nimport {\n  FormStyled,\n  Header,\n  Error,\n  NavLinkStyled,\n  BottomText,\n  //PhoneInputStyled,\n} from './style';\nimport * as yup from 'yup';\n\nconst initialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  name: '',\n  city: '',\n};\n\nconst validationSchema = yup.object({\n  email: yup\n    .string()\n    .matches(\n      /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n      'Invalid email format'\n    ),\n  password: yup\n    .string()\n    .min(7, 'should be 7 chars minimum')\n    .max(32, 'should be 32 chars maximum')\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]*$/,\n      'letters, numbers, symbols'\n    ),\n  confirmPassword: yup.string().when('password', {\n    is: val => (val && val.length > 0 ? true : false),\n    then: yup.string().oneOf([yup.ref('password')], 'Passwords vary'),\n  }),\n  name: yup.string(),\n  city: yup\n    .string()\n    .matches(\n      /^\\s*([A-ZёЁЇїІіЄєҐґА-Я][a-zа-я]+,\\s?)?[A-ZёЁЇїІіЄєҐґА-Я][a-zа-я]+\\s*$/,\n      'put City, Region or only City'\n    ),\n});\n\nexport default function RegisterForm() {\n  const [step, setStep] = useState(1);\n  const [nextError, setNextError] = useState(null);\n  const [submitError, setSubmitError] = useState(null);\n\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [isPhoneValid, setPhoneIsValid] = useState(null);\n\n  const formikRef = React.createRef();\n\n  useEffect(() => {}, [step]);\n\n  const dispatch = useDispatch();\n\n  const { isError } = useAuth();\n\n  const onNext = (errors, values) => {\n    if (!values.email || !values.password || !values.confirmPassword) {\n      setNextError('Please, enter all data');\n    }\n    if (\n      !errors.email &&\n      !errors.password &&\n      !errors.confirmPassword &&\n      values.email &&\n      values.password &&\n      values.confirmPassword\n    ) {\n      setStep(prevState => prevState + 1);\n      setNextError(null);\n      dispatch(authOperations.eraseErrors());\n    }\n  };\n\n  const onPrevious = () => {\n    setStep(prevState => prevState - 1);\n\n    dispatch(authOperations.eraseErrors());\n  };\n\n  const handleSubmit = async (e, errors, values, setSubmitting) => {\n    e.preventDefault();\n    const phone = `+${phoneNumber}`;\n    const data = {\n      email: values.email,\n      password: values.password,\n      name: values.name,\n      city: values.city,\n      phone: phone,\n    };\n\n    try {\n      setSubmitting(true);\n      if (\n        !errors.name &&\n        !errors.city &&\n        !isPhoneValid &&\n        values.name &&\n        values.city &&\n        phone\n      ) {\n        setSubmitError(null);\n        await dispatch(authOperations.register(data));\n      } else {\n        setSubmitError('Enter all data');\n      }\n    } catch (e) {\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        innerRef={formikRef}\n      >\n        {({ setSubmitting, isSubmitting, errors, touched, values }) => (\n          <FormStyled\n            onSubmit={e => handleSubmit(e, errors, values, setSubmitting)}\n            noValidate\n          >\n            <Header>Registration</Header>\n\n            <FieldsWrapper visible={step === 1 ? true : false}>\n              <Input name=\"email\" text=\"Email\">\n                {touched.email && errors.email && <Error>{errors.email}</Error>}\n              </Input>\n\n              <Input name=\"password\" password={true} text=\"Password\">\n                {touched.password && errors.password && (\n                  <Error>{errors.password}</Error>\n                )}\n              </Input>\n\n              <Input\n                name=\"confirmPassword\"\n                password={true}\n                text=\"Confirm Password\"\n              >\n                {touched.confirmPassword && errors.confirmPassword && (\n                  <Error>{errors.confirmPassword}</Error>\n                )}\n              </Input>\n            </FieldsWrapper>\n\n            <FieldsWrapper visible={step === 2 ? true : false}>\n              <Input name=\"name\" text=\"Name\">\n                {touched.name && errors.name && <Error>{errors.name}</Error>}\n              </Input>\n              <Input name=\"city\" text=\"City, region\">\n                {touched.city && errors.city && <Error>{errors.city}</Error>}\n              </Input>\n\n              <PhoneInput\n                phoneNumber={phoneNumber}\n                setPhoneNumber={setPhoneNumber}\n                isPhoneValid={isPhoneValid}\n                setPhoneIsValid={setPhoneIsValid}\n              />\n            </FieldsWrapper>\n\n            <FieldsWrapper visible={step === 1 ? true : false}>\n              <Button onClick={() => onNext(errors, values)}>\n                Next {nextError && <Error>{nextError}</Error>}\n              </Button>\n            </FieldsWrapper>\n\n            <FieldsWrapper visible={step === 2 ? true : false}>\n              <Button type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting ? <ButtonSpinner /> : <span>Register</span>}\n                {submitError && <Error>{submitError}</Error>}\n                {!submitError && isError && <Error>{isError}</Error>}\n              </Button>\n\n              <div>\n                <Button\n                  buttonStyle=\"secondary\"\n                  disabled={isSubmitting}\n                  onClick={onPrevious}\n                >\n                  Back\n                </Button>\n              </div>\n            </FieldsWrapper>\n\n            <span>\n              <BottomText>Already have an account? &nbsp;</BottomText>\n              <NavLinkStyled\n                to={'/login'}\n                key={'home'}\n                onClick={() => {\n                  dispatch(authOperations.eraseErrors());\n                }}\n                end\n              >\n                Login\n              </NavLinkStyled>\n            </span>\n          </FormStyled>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { debounce } from 'utils/dobounce';\n\nimport {\n  PageWrapper,\n  BackgroundMobileIconStyled,\n  BackgroundTabletIconStyled,\n  BackgroundPCIconStyled,\n} from './style';\n\nimport RegisterForm from 'components/AuthForm/RegisterForm';\n\nexport default function RegisterPage() {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    debounce(function handleResize() {\n      setWindowWidth(window.innerWidth);\n    }, 300);\n  }, [windowWidth]);\n\n  useEffect(() => {\n    const debouncedHandleResize = debounce(function handleResize() {\n      setWindowWidth(window.innerWidth);\n    }, 300);\n\n    window.addEventListener('resize', debouncedHandleResize);\n\n    return _ => {\n      window.removeEventListener('resize', debouncedHandleResize);\n    };\n  });\n  return (\n    <>\n      <PageWrapper>\n        <RegisterForm />\n      </PageWrapper>\n      {windowWidth <= 767 && <BackgroundMobileIconStyled />}\n      {768 <= windowWidth && windowWidth <= 1279 && (\n        <BackgroundTabletIconStyled />\n      )}\n      {windowWidth >= 1280 && <BackgroundPCIconStyled />}\n    </>\n  );\n}\n"],"names":["PageWrapper","styled","styleForBackgroundImg","BackgroundMobileIconStyled","BackgroundMobileIcon","BackgroundTabletIconStyled","BackgroundTabletIcon","BackgroundPCIconStyled","BackgroundPCIcon","PhoneInputStyled","PhoneInput","p","theme","colors","hoveredAccent","background","text","DecorativeDiv","FieldWrapper","phoneNumber","setPhoneNumber","isPhoneValid","setPhoneIsValid","phoneRegExp","phoneValidation","value","test","inputProps","id","onBlur","countryCodeEditable","name","autoComplete","country","placeholder","onChange","initialValues","email","password","confirmPassword","city","validationSchema","yup","matches","min","max","when","is","val","length","then","oneOf","RegisterForm","useState","step","setStep","nextError","setNextError","submitError","setSubmitError","formikRef","React","useEffect","dispatch","useDispatch","isError","useAuth","onPrevious","prevState","authOperations","handleSubmit","e","errors","values","setSubmitting","preventDefault","phone","data","innerRef","isSubmitting","touched","onSubmit","noValidate","FieldsWrapper","visible","Input","Button","onClick","onNext","type","disabled","ButtonSpinner","buttonStyle","to","end","RegisterPage","window","innerWidth","windowWidth","setWindowWidth","debounce","debouncedHandleResize","addEventListener","_","removeEventListener"],"sourceRoot":""}